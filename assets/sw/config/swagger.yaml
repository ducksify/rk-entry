definitions:
  rkentry.ProcessInfo:
    properties:
      appName:
        example: rk-app
        type: string
      az:
        example: us-east-1c
        type: string
      cpuInfo:
        $ref: '#/definitions/rkos.CpuInfo'
      description:
        example: RK application
        type: string
      docsUrl:
        example:
        - ""
        items:
          type: string
        type: array
      domain:
        example: dev
        type: string
      gid:
        example: "20"
        type: string
      goEnvInfo:
        $ref: '#/definitions/rkos.GoEnvInfo'
      homeUrl:
        example: https://example.com
        type: string
      keywords:
        example:
        - ""
        items:
          type: string
        type: array
      maintainers:
        example:
        - rk-dev
        items:
          type: string
        type: array
      memInfo:
        $ref: '#/definitions/rkos.MemInfo'
      netInfo:
        $ref: '#/definitions/rkos.NetInfo'
      osInfo:
        $ref: '#/definitions/rkos.OsInfo'
      realm:
        example: rookie-ninja
        type: string
      region:
        example: us-east-1
        type: string
      startTime:
        example: "2022-03-15T20:43:05+08:00"
        type: string
      uid:
        example: "501"
        type: string
      upTimeSec:
        example: 13
        type: integer
      username:
        example: lark
        type: string
      version:
        example: dev
        type: string
    type: object
  rkentry.aliveResp:
    properties:
      alive:
        example: true
        type: boolean
    type: object
  rkentry.gcResp:
    properties:
      memStatAfterGc:
        $ref: '#/definitions/rkos.MemInfo'
      memStatBeforeGc:
        $ref: '#/definitions/rkos.MemInfo'
    type: object
  rkentry.readyResp:
    properties:
      ready:
        example: true
        type: boolean
    type: object
  rkos.CpuInfo:
    properties:
      count:
        example: 8
        type: integer
    type: object
  rkos.GoEnvInfo:
    properties:
      goArch:
        example: amd64
        type: string
      goos:
        example: darwin
        type: string
      routinesCount:
        example: 9
        type: integer
      version:
        example: go1.17.6
        type: string
    type: object
  rkos.MemInfo:
    properties:
      forceGcCount:
        example: 0
        type: integer
      gcCountTotal:
        example: 1
        type: integer
      lastGcTimestamp:
        example: "2022-03-15T20:43:06+08:00"
        type: string
      memAllocByte:
        example: 4182336
        type: integer
      memUsedMb:
        example: 3
        type: integer
      memUsedPercentage:
        example: 0.21
        type: number
      sysAllocByte:
        example: 19876624
        type: integer
    type: object
  rkos.NetInfo:
    properties:
      netInterface:
        items:
          $ref: '#/definitions/rkos.netInterface'
        type: array
    type: object
  rkos.OsInfo:
    properties:
      arch:
        example: amd64
        type: string
      hostname:
        example: lark.local
        type: string
      os:
        example: darwin
        type: string
    type: object
  rkos.netInterface:
    properties:
      addrs:
        example:
        - 127.0.0.1/8
        items:
          type: string
        type: array
      flags:
        example:
        - up
        items:
          type: string
        type: array
      hardwareAddr:
        example: ""
        type: string
      mtu:
        example: 16384
        type: integer
      multicastAddrs:
        example:
        - ff02::fb
        items:
          type: string
        type: array
      name:
        example: lo0
        type: string
    type: object
info:
  contact:
    email: lark@pointgoal.io
    name: rk-dev
    url: https://github.com/rookie-ninja/rk-entry
  description: |+
    ## Description
    Builtin APIs supported via [rk-entry](https://github.com/rookie-ninja/rk-entry).

    ## APIs

    | Name   | Description                               |
    |--------|-------------------------------------------|
    | /alive | Designed for liveness prob of Kubernetes  |
    | /ready | Designed for readiness prob of Kubernetes |
    | /gc    | Trigger GC                                |
    | /info  | Returns application, process, OS info     |

  license:
    name: Apache 2.0 License
    url: https://github.com/rookie-ninja/rk-entry/blob/master/LICENSE.txt
  title: RK Common Service
  version: "2.0"
paths:
  /rk/v1/alive:
    get:
      operationId: "8002"
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/rkentry.aliveResp'
      security:
      - ApiKeyAuth: []
      - BasicAuth: []
      - JWT: []
      summary: Get application liveness status
  /rk/v1/gc:
    get:
      operationId: "8003"
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/rkentry.gcResp'
      security:
      - ApiKeyAuth: []
      - BasicAuth: []
      - JWT: []
      summary: Trigger Gc
  /rk/v1/info:
    get:
      operationId: "8004"
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/rkentry.ProcessInfo'
      security:
      - ApiKeyAuth: []
      - BasicAuth: []
      - JWT: []
      summary: Get application and process info
  /rk/v1/ready:
    get:
      operationId: "8001"
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/rkentry.readyResp'
        "500":
          description: Internal Server Error
          schema: {}
      security:
      - ApiKeyAuth: []
      - BasicAuth: []
      - JWT: []
      summary: Get application readiness status
securityDefinitions:
  ApiKeyAuth:
    in: header
    name: X-API-Key
    type: apiKey
  BasicAuth:
    type: basic
  JWT:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
